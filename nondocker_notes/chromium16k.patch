diff --git a/build/config/sysroot.gni b/build/config/sysroot.gni
index 7fed8b3..4d99eac 100644
--- a/build/config/sysroot.gni
+++ b/build/config/sysroot.gni
@@ -56,9 +56,13 @@ if (is_linux && target_sysroot_dir != "") {
     sysroot = "//build/linux/ubuntu_precise_amd64-sysroot"
   } else {
     if (current_cpu == "x64") {
-      sysroot = "//build/linux/debian_wheezy_amd64-sysroot"
+      # sysroot = "//build/linux/debian_wheezy_amd64-sysroot"
+      use_sysroot = false
+      sysroot = ""
     } else if (current_cpu == "x86") {
-      sysroot = "//build/linux/debian_wheezy_i386-sysroot"
+      # sysroot = "//build/linux/debian_wheezy_i386-sysroot"
+      use_sysroot = false
+      sysroot = ""
     } else if (current_cpu == "mipsel") {
       sysroot = "//build/linux/debian_wheezy_mips-sysroot"
     } else if (current_cpu == "arm") {
@@ -76,7 +80,7 @@ if (is_linux && target_sysroot_dir != "") {
     # gcc 4.9. Clang is able to detect and work with the 4.6 headers while
     # gcc is not. This check can be removed if we ever update to a more modern
     # sysroot.
-    assert(is_clang, "sysroot images require clang (try use_sysroot=false)")
+#    assert(is_clang, "sysroot images require clang (try use_sysroot=false)")
 
     _script_arch = current_cpu
     if (_script_arch == "x86") {
diff --git a/third_party/WebKit/Source/wtf/allocator/PageAllocator.h b/third_party/WebKit/Source/wtf/allocator/PageAllocator.h
index 5afc065..90c527f 100644
--- a/third_party/WebKit/Source/wtf/allocator/PageAllocator.h
+++ b/third_party/WebKit/Source/wtf/allocator/PageAllocator.h
@@ -42,7 +42,7 @@ namespace WTF {
 #if OS(WIN)
 static const size_t kPageAllocationGranularityShift = 16;  // 64KB
 #else
-static const size_t kPageAllocationGranularityShift = 12;  // 4KB
+static const size_t kPageAllocationGranularityShift = 14;  // 4KB
 #endif
 static const size_t kPageAllocationGranularity =
     1 << kPageAllocationGranularityShift;
@@ -53,7 +53,7 @@ static const size_t kPageAllocationGranularityBaseMask =
 
 // All Blink-supported systems have 4096 sized system pages and can handle
 // permissions and commit / decommit at this granularity.
-static const size_t kSystemPageSize = 4096;
+static const size_t kSystemPageSize = 16384;
 static const size_t kSystemPageOffsetMask = kSystemPageSize - 1;
 static const size_t kSystemPageBaseMask = ~kSystemPageOffsetMask;
 
diff --git a/third_party/WebKit/Source/wtf/allocator/PartitionAlloc.h b/third_party/WebKit/Source/wtf/allocator/PartitionAlloc.h
index 2c7d7999..9ff4a6b 100644
--- a/third_party/WebKit/Source/wtf/allocator/PartitionAlloc.h
+++ b/third_party/WebKit/Source/wtf/allocator/PartitionAlloc.h
@@ -123,7 +123,7 @@ static const size_t kBucketShift = (kAllocationGranularity == 8) ? 3 : 2;
 // system page of the span. For our current max slot span size of 64k and other
 // constant values, we pack _all_ partitionAllocGeneric() sizes perfectly up
 // against the end of a system page.
-static const size_t kPartitionPageShift = 14;  // 16KB
+static const size_t kPartitionPageShift = 16;  // 16KB
 static const size_t kPartitionPageSize = 1 << kPartitionPageShift;
 static const size_t kPartitionPageOffsetMask = kPartitionPageSize - 1;
 static const size_t kPartitionPageBaseMask = ~kPartitionPageOffsetMask;
